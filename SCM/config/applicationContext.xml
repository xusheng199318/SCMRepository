<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- 使用spring读取database.properties文件 -->
	<!-- <bean id="propertyConfigure" 
  		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
  		<property name="locations"> 
   			<list> 
    			<value>classpath*:/database.properties</value> 
   			</list> 
  		</property> 
 	</bean>  -->
 	
 	

	<!-- 配置数据源，去掉myBatis-config.xml的数据源相关配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/scm?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="username" value="root" />
		<property name="password" value="123456" /> 
		<property name="initialSize" value="1" /> 
		<property name="minIdle" value="1" /> 
		<property name="maxActive" value="10" /> 
	</bean> 
	
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/scm?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="user" value="root" />
		<property name="password" value="123456" />
	</bean>  -->
	
	<!-- 配置session工厂 -->
	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:myBatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:com/xusheng/scm/sql/*.xml"></property> 
	</bean> 
	
	<!-- 配置SessionTemplate，已封装了繁琐的数据操作 -->
	<!-- <bean id="sst" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="ssf" />
	</bean> -->
	
	<!-- 配置 转换器，对于在basePackage设置的包（包括子包）下的接口类，
	如果接口类的全类名在Mapper.xml文件中和定义过命名空间一致，
	 将被转换成spring的BEAN，在调用 
		的地方通过@Autowired方式将可以注入接口实例 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xusheng.scm.dao"></property>
		<property name="sqlSessionFactory" ref="ssf"></property>
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> -->
	</bean> 
	
	<!-- 自动扫描组件，要把controller去除，他们是在spring-mvc.xml中配置，如果不去除会影响事务管理。 -->
	<context:component-scan base-package="com.xusheng.scm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
	</context:component-scan> 

	<!-- 配置事务管理器,管理数据源事务处理 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置事务通知 -->
	<tx:advice id="advice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置切面织入的范围,后边要把事务边界定在service层 -->
	<aop:config>
		<aop:advisor advice-ref="advice" pointcut="execution(* com.xusheng.scm.serviceImpl.*.*(..))"/>
	</aop:config>
	
	


	
	

	
	




</beans>